def my_fn(x: int, y: bool, z: str) -> int:
    def ident(x: int) -> int:
        return x;

    def add(a: int, b: int) -> int:
        a + b

    if y:
        a = ident(a) + ident(a);
        ident(a * (a + b) * x)
    else:
        a = a * a;
        return a + a + b + x;

struct Name:
    first: str
    last: str

struct Person:
    age: int
    name: str

    def new(age: int, name: str) -> Self:
        return Person(age=age, name=name);

    def get_age(self: Self) -> int:
        return self.age;



p: mut Person = Person(age=10, name=Name(first="Dave", last="Lee"));
a: mut int = 100;

p.name.last = a;

def get_person(name_first: str, name_last: str, age: int) -> Person:
    Person(
        name=Name(first=name_first, last=name_last),
        age=age,
    )


name: str = get_person("Hi", "There", 20).name.first;

age = p.get_age();


def save_div(a: int, b: int) -> Result[int, str]:
    if b == 0:
        Err("Cannot Div By Zero")
    else:
        Ok(a / b)

a = save_div(10, 20);

a: mut Option[Result[Option[int], Option[str]]] = Some(Ok(10));
